name: Sync GitHub Repos to GitLab and Gitee

on:
  workflow_dispatch:
  schedule:
    - cron: "0 03 */15 * *"

jobs:
  get_repos:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      repository-projects: read
    outputs:
      repo_list: ${{ steps.set-output.outputs.repos }}
    steps:
      - name: Get all repositories
        id: get-all-repos
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const { data } = await github.rest.repos.listForAuthenticatedUser({
                per_page: 100,
                sort: 'updated',
                direction: 'desc'
              });
              const repos = data.filter(repo => !repo.archived).map(repo => repo.name);
              
              // 将数组转换为单行 JSON 字符串
              const repoJson = JSON.stringify(repos).replace(/\n/g, '');
              console.log('Repo JSON:', repoJson);
              
              // 使用环境变量中转，避免直接设置复杂输出
              core.exportVariable('REPO_LIST_JSON', repoJson);
            } catch (error) {
              core.setFailed('Failed to fetch repos: ' + error.message);
            }
          # result-encoding: json

      - name: Set output using environment variable
        id: set-output
        run: |
          echo "repos=${REPO_LIST_JSON}" >> $GITHUB_OUTPUT
          echo "Repo list: ${REPO_LIST_JSON}"
          if [ -z "${REPO_LIST_JSON}" ]; then
            echo "Repo list is empty!"
            exit 1
          fi

  sync_repos:
    needs: get_repos
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJSON(needs.get_repos.outputs.repo_list) }}
    permissions:
      contents: read
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ matrix.repo }}
          path: ${{ matrix.repo }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git Identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Sync to GitLab and Gitee
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
          GITLAB_REPO_OWNER: ${{ github.repository_owner }}
          GITEE_REPO_OWNER: ${{ github.repository_owner }}
        run: |
          cd ${{ matrix.repo }}
          git remote add gitlab https://${{ env.GITLAB_REPO_OWNER }}:$GITLAB_TOKEN@gitlab.com/${{ env.GITLAB_REPO_OWNER }}/${{ matrix.repo }}.git
          git remote add gitee https://${{ env.GITEE_REPO_OWNER }}:$GITEE_TOKEN@gitee.com/${{ env.GITEE_REPO_OWNER }}/${{ matrix.repo }}.git

          # 避免重复推送同一提交
          git fetch gitlab main || true
          git fetch gitee main || true
          if ! git diff --quiet gitlab/main..main; then
            # git push gitlab main --force-if-different
            git push gitlab main --force
          fi
          if ! git diff --quiet gitee/main..main; then
            # git push gitee main --force-if-different
            git push gitee main --force
          fi
